{"version":3,"sources":["components/User.js","components/Comment.js","components/CommentList.js","components/Post.js","components/utils.js","components/PostList.js","App.js","index.js"],"names":["User","_ref","name","email","_ref$address","address","city","street","zipcode","react_default","a","createElement","Comment","body","className","CommentList","state","commentsIsShown","showComments","_this","setState","comments","this","props","onClick","map","comment","src_components_Comment","Object","assign","key","id","React","Component","Post","title","user","components_User","CommentList_CommentList","getData","url","fetch","then","response","json","getUsers","getPosts","getComments","PostList","posts","postsFiltered","requested","loaded","filterValue","loadData","Promise","all","_ref2","slicedToArray","users","post","_objectSpread","find","userId","filter","postId","e","val","target","value","filteredPosts","includes","_this$state","type","placeholder","onChange","length","src_components_Post","App","components_PostList","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9d86aa16.chunk.js","sourcesContent":["import React from 'react';\n\nconst User = ({ name, email, address: { city, street, zipcode } }) => (\n  <div>\n    <div>{name}</div>\n    <div>{email}</div>\n    <address>\n      <div>{city}</div>\n      <div>{street}</div>\n      <div>{zipcode}</div>\n    </address>\n  </div>\n);\n\nexport default User;\n","import React from 'react';\nimport './Comment.css';\n\nconst Comment = ({ name, email, body }) => (\n  <div className=\"comment border border-dark rounded bg-info\">\n    <div className={'commentText'}>{name}</div>\n    <div className={'commentText'}>{email}</div>\n    <div className={'commentText'}>{body}</div>\n  </div>\n);\n\nexport default Comment;\n","import React from 'react';\nimport Comment from './Comment';\n\nexport default class CommentList extends React.Component {\n  state = {\n    commentsIsShown: false,\n  };\n\n\n  showComments = () => {\n    this.setState(({ commentsIsShown }) => ({\n      commentsIsShown: !commentsIsShown,\n    }));\n  };\n\n  render() {\n    const { comments } = this.props;\n\n    if (!this.state.commentsIsShown) {\n      return <button className={'btn btn-outline-dark btn-md'} onClick={this.showComments}>Show comments</button>\n    }\n\n    return (\n      <div>\n        <button className={'btn btn-outline-dark btn-md'} onClick={this.showComments}>Hide comments</button>\n        {\n          comments.map(comment => (\n          <Comment key={comment.id} {...comment} />\n          ))\n        }\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport User from './User';\nimport CommentList from \"./CommentList\";\nimport './Post.css';\n\nconst Post = ({ title, body, user, comments }) => (\n  <article className=\"post\">\n    <h2 className=\"post__title\">{title}</h2>\n    <p>{body}</p>\n    <User {...user} />\n    <CommentList comments={comments} />\n  </article>\n);\n\nexport default Post;\n","const usersUrl = 'https://jsonplaceholder.typicode.com/users';\nconst postsUrl = 'https://jsonplaceholder.typicode.com/posts';\nconst commentsUrl = 'https://jsonplaceholder.typicode.com/comments';\n\nfunction getData(url) {\n  return fetch(url).then(response => response.json());\n}\n\nexport const getUsers = () => getData(usersUrl);\nexport const getPosts = () => getData(postsUrl);\nexport const getComments = () => getData(commentsUrl);\n","import React from 'react';\nimport Post from './Post';\nimport {getComments, getPosts, getUsers} from './utils';\n\nclass PostList extends React.Component {\n  state = {\n    posts: [],\n    postsFiltered: [],\n    requested: false,\n    loaded: false,\n    filterValue: '',\n  };\n\n  loadData = () => {\n    this.setState({\n      requested: true,\n    });\n\n    Promise.all([getPosts(), getUsers(), getComments()])\n      .then(([ posts, users, comments ]) => {\n        this.setState({\n          posts: posts.map(post => ({\n            ...post,\n            user: users.find(user => user.id === post.userId),\n            comments: comments.filter(comment => comment.postId === post.id),\n          })),\n          loaded: true,\n          requested: false,\n        });\n      });\n  };\n\n  filter = (e) => {\n    const val = e.target.value;\n    const filteredPosts = this.state.posts.filter(post =>\n      post.title.includes(val)\n      ||\n      post.body.includes(val));\n    this.setState( {\n      postsFiltered: filteredPosts,\n      filterValue: val,\n    });\n  };\n\n  render() {\n    const {filterValue, postsFiltered, posts} = this.state;\n    if(this.state.requested) {\n      return <h3>Loading...</h3>;\n    }\n\n    if(!this.state.loaded) {\n      return <button className={'btn btn-outline-dark btn-lg'} onClick={this.loadData}>Load Posts</button>;\n    }\n\n    return (\n      <section>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"formGroupExampleInput\"\n            placeholder=\"Введите значение\"\n            onChange={this.filter}\n          />\n          {filterValue.length > 0\n            ? postsFiltered.map(post => <Post key={post.id} {...post} />)\n            : posts.map(post => <Post key={post.id} {...post} />)\n          }\n          {postsFiltered.length < 1 ? <span>Ничего не найдено</span> : null}\n        </div>\n      </section>\n    );\n  }\n};\n\nexport default PostList;\n","import React from 'react';\nimport './App.css';\nimport PostList from './components/PostList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of posts</h1>\n      <PostList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}